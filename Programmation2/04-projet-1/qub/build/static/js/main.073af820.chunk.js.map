{"version":3,"sources":["assets/logo-random.svg","assets/login-bg.png","assets/album-joy-division.png","assets/icn-search.svg","components/is_logged_in.js","components/login-form.js","screens/LoginScreen.js","components/Navigation.js","screens/BaseScreen.js","constant.js","components/albumCardSingle.js","components/EmployeeCardList.js","components/FilterForm.js","screens/HomepageScreen.js","screens/AlbumSingleScreen.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","store","get","LoginForm","props","handleConnexion","bind","history","this","email","document","getElementById","value","password","toLowerCase","set","push","isLoggedIn","to","Wrapper","Form","Group","controlId","Label","className","Control","type","placeholder","required","Feedback","Button","variant","onClick","PureComponent","withRouter","styled","div","LoginScreen","src","Logo","alt","href","loginBackground","handleLogout","remove","Navbar","expand","Brand","logo","Nav","Link","BaseScreen","children","employees","name","title","background","JoyDivision","albumCardSingle","Card","ImgOverlay","Title","Subtitle","EmployeeCardList","employeeList","map","item","index","key","id","FilterForm","setFilterStr","inline","FormGroup","FormControl","onChange","e","target","HomepageScreen","state","filterStr","filteredStaffList","filter","includes","Container","fluid","val","setState","telephone","address","AlbumSingleScreen","Row","Col","md","lg","xl","scope","AppRouter","path","exact","component","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.073af820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-random.c1c88895.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-bg.70f4c0bb.png\";","module.exports = __webpack_public_path__ + \"static/media/album-joy-division.eaa5f3f2.png\";","module.exports = __webpack_public_path__ + \"static/media/icn-search.25a31330.svg\";","import store from 'store';\n\nexport default () => !!store.get('loggedIn');","import React, { PureComponent } from 'react';\nimport store from 'store';\nimport styled from \"styled-components/macro\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Redirect, withRouter } from 'react-router-dom';\nimport isLoggedIn from './is_logged_in';\n\nclass LoginForm extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.handleConnexion = this.handleConnexion.bind(this);\n    }\n    handleConnexion() {\n        let connecter = false;\n        const { history } = this.props;\n\n        const email = document.getElementById('userEmail').value;\n        const password = document.getElementById('userPassword').value;\n\n        if (email.toLowerCase() === \"user@a.com\" && password === \"a\") {\n            connecter = true;\n\n            store.set('loggedIn', true);\n            history.push('/home');\n        }\n    }\n\n    render() {\n\n        if (isLoggedIn()) {\n            return <Redirect to='/home' />\n        }\n\n        return (\n            <Wrapper>\n                <Form>\n                    <fieldset>\n                        <Form.Group controlId=\"userEmail\">\n                            <Form.Label>\n                                Email\n                                <span className='input-required'> *</span>\n                            </Form.Label>\n                            <Form.Control type=\"email\"\n                                placeholder=\"email@user.com\"\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"userPassword\">\n                            <Form.Label>\n                                Mot de passe\n                                <span className='input-required'> *</span>\n                            </Form.Label>\n                            <Form.Control type=\"password\"\n                                placeholder=\"Mot de passe\"\n                                required />\n                        </Form.Group>\n                        <Form.Control.Feedback>\n                            Votre adresse et mot de passe sont incorrects.\n                        </Form.Control.Feedback>\n                    </fieldset>\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleConnexion}>\n                        Connexion\n                    </Button>\n                </Form>\n            </Wrapper >\n        )\n    }\n}\n\nexport default withRouter(LoginForm);\nconst Wrapper = styled.div``","import React, { PureComponent } from 'react';\nimport styled from \"styled-components/macro\";\nimport LoginForm from '../components/login-form';\nimport Logo from '../assets/logo-random.svg';\nimport loginBackground from '../assets/login-bg.png';\n\n\nclass LoginScreen extends PureComponent {\n\n    render() {\n        return (\n            <Wrapper>\n                <div className='auth-wrapper'>\n                    <div className='auth-inner'>\n                        <div className='auth-content'>\n                            <img src={Logo} alt=\"logo\" className=\"img-fluid\" />\n                            <h3>Connexion</h3>\n                            <LoginForm />\n                            <div className='form-link-wrapper'>\n                                <a href='/' className='primary-link'>Mot de passe oublié?</a>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </Wrapper>\n\n        )\n    }\n}\n\nexport default LoginScreen;\nconst Wrapper = styled.div`\nbackground-image: url(\"${loginBackground}\");\nbackground-repeat: no-repeat;\nbackground-position: center center;\nbackground-size: cover;\nwidth: 100%;\nheight:100vh;\n\n.auth-wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n    padding-right: 15px;\n    padding-left:15px;\n}\n\n.auth-inner {\n    width: 100%;\n    max-width: 430px;\n    margin: 0 auto;\n    border-radius: 7.5px;\n    overflow: hidden;\n}\n\n.auth-content {\n    color: #ffffff;\n    padding: 50px;\n    text-align: center;\n    background: rgba(255,255,255,0.15);\n\n    img {\n        margin-bottom: 2rem;\n    }\n\n    form {\n        margin-bottom: 15px;\n\n        fieldset {\n            text-align:left;\n        }\n    }\n\n    .form-link-wrapper {\n        text-align: center;\n    }\n}\n\n@media (max-width : 991.98px){\n    .content-left img {\n        height: 150px;\n    }\n}\n\n@media (max-width: 575.98px) {\n    .auth-wrapper {\n        padding-top: 30px;\n        align-items: flex-start;\n    }\n\n    .content-right h1 {\n        text-align: center;\n    }   \n}\n\n`","import React from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport store from 'store';\nimport isLoggedIn from './is_logged_in';\nimport styled from \"styled-components/macro\";\nimport logo from \"../assets/logo-random.svg\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\n\nconst handleLogout = history => () => {\n  store.remove('loggedIn');\n  history.push('/');\n}\n\nconst Navigation = ({ history }) => {\n  if (!isLoggedIn()) {\n    return <Redirect to='/' />\n  }\n  return (\n    <Wrapper>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img src={logo} alt=\"logo\" className=\"img-fluid\" />\n        </Navbar.Brand>\n        <Nav>\n          <Nav.Link>Aide</Nav.Link>\n          <Nav.Link>Télécharger</Nav.Link>\n          <Nav.Link onClick={handleLogout(history)}>\n            Déconnexion\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    </Wrapper>\n  );\n}\n\nexport default withRouter(Navigation);\nconst Wrapper = styled.div`\n\n.navbar {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding-left: 6%;\n  padding-right: 6%;\n  \n  .navbar-brand {\n  }\n\n  .navbar-nav {\n    margin-left: auto;\n  }\n\n  .nav-link {\n    font-weight: 900;\n      transition: all .2s ease;\n      font-family : 'Montserrat', sans-serif;\n      color: #2A364E;\n\n      &:hover {\n          background: ;\n      }\n  }\n}\n`\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components/macro'\nimport Navigation from \"../components/Navigation\";\n\n\nclass BaseScreen extends PureComponent {\n    render() {\n        return (\n            <Wrapper>\n                <div className=\"navigation-wrapper\">\n                    <Navigation />\n                </div>\n\n                <div className='page-content'>\n                    {this.props.children}\n                </div>\n            </Wrapper>\n        )\n    }\n}\n\nexport default BaseScreen;\n\nconst Wrapper = styled.div`\n\n.navigation-wrapper {\n    height: 100%;\n    background: #ffffff;\n    width: 100%;\n  }\n\n`","import JoyDivision from \"./assets/album-joy-division.png\"\nexport const employees = [\n    {\n        name: \"Joy Division\",\n        title: \"Unknown Pleasures\",\n        background: { JoyDivision },\n    },\n\n    {\n        name: \"Kendrick Lamar\",\n        title: \"Developpeur Front-End\",\n        background: \"./assets/album-kendrick-lamar.png\"\n    },\n\n    {\n        name: \"Miles Davis\",\n        title: \"Bitches Brew\",\n        background: \"./assets/album-miles-davis.png\"\n    },\n\n    {\n        name: \"Tyler, The Creator\",\n        title: \"IGOR\",\n        background: \"\"\n    },\n    {\n        name: \"The Cure\",\n        title: \"Boys Don't Cry\",\n        background: \"\"\n    },\n    {\n        name: \"David Bowie\",\n        title: \"Aladdin Sane\",\n        background: \"\"\n    },\n    {\n        name: \"Tame Impala\",\n        title: \"Currents\",\n        background: \"\"\n    },\n    {\n        name: \"Johnny Cash\",\n        title: \"The Man Comes Around\",\n        background: \"\"\n    },\n];\n\nconst joyTracks = [\n    \"Disorder\",\n    \"Day of the Lords\",\n    \"Candidate\",\n    \"Insight\",\n    \"New Dawn Fades\",\n    \"She's Lost Control\",\n    \"Shadowplay\",\n    \"Wilderness\",\n    \"Interzone\",\n    \"I Remember Nothing\",\n];\n\nconst TylerTracks = [\n    \"Igor's Theme\",\n    \"Earfquake\",\n    \"I think\",\n    \"Exactly what you run from you end up chasing\",\n    \"Running out of time\",\n    \"New magic wand\",\n    \"A boy is a gun*\",\n    \"Puppet\",\n    \"What's good\",\n    \"Gone, gone / Thank you\",\n    \"I don't love you anymore\",\n    \"Are we still friends?\"\n];\n\nconst TameTracks = [\n    \"Let It Happen\",\n    \"Nangs\",\n    \"The Moment\",\n    \"Yes I'm Changing\",\n    \"Eventually\",\n    \"Gossip\",\n    \"The Less I Know the Better\",\n    \"Past Life\",\n    \"Disciples\",\n    \"'Cause I'm a Man\",\n    \"Reality in Motion\",\n    \"Love/Paranoia\",\n    \"New Person, Same Old Mistakes\"\n];\n\nconst KendrickTracks = [\n    \"Wesley's Theory (featuring George Clinton and Thundercat)\",\n    \"For Free? (Interlude)\",\n    \"King Kunta\",\n    \"Institutionalized (featuring Bilal, Anna Wise and Snoop Dogg)\",\n    \"These Walls (featuring Bilal, Anna Wise and Thundercat)\",\n    \"U\",\n    \"Alright\",\n    \"For Sale? (Interlude)\",\n    \"Momma\",\n    \"Hood Politics\",\n    \"How Much a Dollar Cost (featuring James Fauntleroy and Ronald Isley)\",\n    \"Complexion (A Zulu Love) (featuring Rapsody)\",\n    \"The Blacker the Berry\",\n    \"You Ain't Gotta Lie (Momma Said)\",\n    \"I\",\n    \"Mortal Man\"\n];\n\nconst BowieTracks = [\n    \"Watch That Man\",\n    \"Aladdin Sane (1913–1938–197?)\",\n    \"Drive-In Saturday\",\n    \"Panic in Detroit\",\n    \"Cracked Actor\",\n    \"Time\",\n    \"The Prettiest Star\",\n    \"Let's Spend the Night Together\",\n    \"The Jean Genie\",\n    \"Lady Grinning Soul\",\n];","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Card } from \"react-bootstrap\";\n\nconst albumCardSingle = ({ name, title, background }) => {\n  return (\n    <Wrapper className=\"col\" >\n      <Card className='album-card-single'>\n        <div className='card-img'>\n          <div className='img-wrapper'></div>\n        </div>\n        <Card.ImgOverlay>\n          <div className='album-info'>\n            <div className='album-info-inner'>\n              <Card.Title>{name}</Card.Title>\n              <Card.Subtitle>\n                {title}\n              </Card.Subtitle>\n            </div>\n          </div>\n        </Card.ImgOverlay>\n      </Card>\n    </Wrapper >\n  )\n}\n\nexport default albumCardSingle\n\nconst Wrapper = styled.div`\nmargin-bottom: 30px;\n\n.album-card-single {\n  height: 100%;\n  border-radius: 7.5px;\n  border: none;\n  box-shadow: none;\n  overflow: hidden;\n    .card-body {\n        padding: 0;\n    }\n}\n\n.album-info {\n  padding: .75rem 1.25rem;\n\n  .h5 {\n    margin-bottom: 10px;\n  }\n\n  .h6 {\n    margin-bottom: 0;\n    color: #ffffff;\n  }\n\n  .card-subtitle {\n    color: #9a9a9a;\n    text-transform: uppercase;\n    font-size: 10px;\n  }\n}\n\n.img-wrapper {\n/*   background-image: url('${props => props.background}'); */\n/*   background: ${props => 'url(${props.background})'}; */\n}\n\n.album-card-single-img {\n  display: block;\n  width: 100%;\n  height: 345px;\n}\n\n.card-img-overlay {\n  top: unset;\n  bottom: 0;\n  height: 100%;\n  background: transparent;\n  cursor: pointer;\n  padding: 0;\n\n  .album-info {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n  .album-info-inner {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100px;\n    background: #FF21B2;\n    padding: 1.25rem;\n    color: #ffffff;\n    transform: translate(0, 100%);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    .album-info-inner {\n      transform: translate(0, 0);\n    }\n  }\n}\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { employees } from \"../constant\"\nimport EmployeeCardSingle from \"./albumCardSingle\";\n\n\n\nclass EmployeeCardList extends PureComponent {\n  render() {\n\n    const employeeList = employees.map((item, index) => {\n      return (\n        <EmployeeCardSingle key={index}\n          name={item.name}\n          title={item.title}\n          background={item.background}\n        />\n      )\n\n    })\n\n    return (\n      <Wrapper className=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-3 row-cols-xl-4\" id='employee-list'>\n        {employeeList}\n      </Wrapper>\n    )\n  }\n}\n\nexport default EmployeeCardList;\n\nconst Wrapper = styled.div`\n  align-items: stretch;\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Form, FormControl, FormGroup, Button, } from \"react-bootstrap\";\nimport Search from \"../assets/icn-search.svg\";\n\nclass FilterForm extends PureComponent {\n\n    render() {\n        const { setFilterStr } = this.props\n\n        return (\n            <Wrapper>\n                <Form inline>\n                    <FormGroup className=\"mb-0 input-search\">\n                        <FormControl type=\"search\" placeholder=\"Rechercher\" onChange={e => setFilterStr(e.target.value)} />\n                    </FormGroup>\n                </Form>\n            </Wrapper>\n        );\n    }\n}\n\nexport default FilterForm;\nconst Wrapper = styled.div`\n\n`","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport BaseScreen from \"./BaseScreen\";\nimport { employees } from '../constant';\nimport EmployeeCardList from \"../components/EmployeeCardList\";\nimport FilterForm from \"../components/FilterForm\";\nimport EmployeeCardSingle from \"../components/albumCardSingle\";\nimport { Container } from \"react-bootstrap\";\n\nclass HomepageScreen extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterStr: ''\n    };\n  }\n\n  render() {\n    /* const List = this.state.employees; */\n    const filteredStaffList = employees.filter(employees =>\n      employees.name.toLowerCase().includes(this.state.filterStr.toLowerCase())\n    )\n    return (\n      <BaseScreen>\n        <Wrapper className='directory'>\n          <Container fluid>\n            <div className='directory-header'>\n              <h1>Albums</h1>\n              <FilterForm setFilterStr={val => this.setState({ filterStr: val })} />\n            </div>\n            <EmployeeCardList>\n              {filteredStaffList.map((item, index) => (\n                <EmployeeCardSingle key={index}\n                  name={item.name}\n                  title={item.title}\n                  email={item.email}\n                  telephone={item.telephone}\n                  address={item.address}\n                />\n              ))}\n\n            </EmployeeCardList>\n          </Container>\n        </Wrapper>\n      </BaseScreen>\n    );\n  }\n}\n\nexport default HomepageScreen;\nconst Wrapper = styled.div`\nmargin: 0 auto;\n\n.directory-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 60px;\n  margin-bottom: 30px;\n\n  h1 {\n    margin-bottom: 0;\n  }\n}\n\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport BaseScreen from \"./BaseScreen\";\nimport { employees } from '../constant';\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass AlbumSingleScreen extends PureComponent {\n\n    render() {\n\n        return (\n            <BaseScreen>\n                <Wrapper>\n                    <Container fluid>\n                        <div className='page-header'>\n                            <Row>\n                                <Col md={5} lg={4} xl={3}>\n                                    <div className=\"card-img\">\n                                        <div className=\"img-wrapper\"></div>\n                                    </div>\n                                    <p className=\"text-uppercase mb-0\"><strong>Album</strong></p>\n                                    <h1 className=\"mb-0\">Bitches Brew</h1>\n                                    <h4 className=\"mb-0\">Miles Davis</h4>\n                                    <ul className=\"list-unstyled d-flex flex-row h6\">\n                                        <li className=\"\">1970</li>\n                                        <li className=\"\">6 Chansons</li>\n                                        <li className=\"\">94:11</li>\n                                    </ul>\n                                    <Button variant=\"outline-primary\">\n                                        Retour à la page principale\n                                    </Button>\n\n                                </Col>\n                                <Col md={7} lg={8} xl={9}>\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <thead>\n                                                <tr>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Titre</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <th scope=\"row\">1</th>\n                                                    <td>Mark</td>\n                                                </tr>\n                                                <tr>\n                                                    <th scope=\"row\">2</th>\n                                                    <td>Jacob</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n\n\n\n                                </Col>\n                            </Row>\n\n                        </div>\n                    </Container>\n                </Wrapper>\n            </BaseScreen>\n        );\n    }\n}\n\nexport default AlbumSingleScreen;\nconst Wrapper = styled.div`\nmargin: 0 auto;\n\n.directory-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 60px;\n  margin-bottom: 30px;\n\n  h1 {\n    margin-bottom: 0;\n  }\n}\n\n`\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from './screens/LoginScreen';\nimport HomepageScreen from './screens/HomepageScreen';\nimport AlbumSingleScreen from './screens/AlbumSingleScreen'\n\n\nconst AppRouter = (props) => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={LoginScreen} />\n                <Route path=\"/home\" exact component={HomepageScreen} />\n                <Route path=\"/album-single\" exact component={AlbumSingleScreen} />\n\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, {Component} from 'react';\nimport AppRouter from \"./Router\"\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <AppRouter/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}