{"version":3,"sources":["components/is_logged_in.js","components/login-form.js","screens/LoginScreen.js","components/addEmployeeForm.js","components/addEmployeeModal.js","components/Navigation.js","screens/BaseScreen.js","components/EmployeeCardSingle.js","components/EmployeeCardList.js","screens/HomepageScreen.js","Router.js","App.js","serviceWorker.js","index.js","assets/logo-random.svg","assets/icn-logout.svg","assets/icn-plus.svg","assets/icn-email.svg","assets/icn-phone.svg","assets/icn-home.svg","assets/icn-search.svg"],"names":["store","get","LoginForm","props","state","username","password","error","handleChange","bind","onSubmit","e","preventDefault","this","history","setState","push","set","input","value","isLoggedIn","to","Wrapper","Form","Group","controlId","Label","className","Control","type","placeholder","name","onChange","required","Feedback","Button","variant","block","PureComponent","styled","div","LoginScreen","Row","noGutters","Col","sm","src","Logo","alt","href","AddEmployeeForm","pattern","xs","EmployeeModal","Modal","size","aria-labelledby","centered","ModalWrapper","Header","closeButton","Title","id","Body","AddEmployeeModal","React","useState","modalShow","setModalShow","onClick","add","show","onHide","handleLogout","remove","Navigation","Navbar","expand","Brand","logo","Nav","Link","logout","BaseScreen","children","EmployeeCardSingle","title","email","telephone","address","Card","Subtitle","ListGroup","Item","IcnEmail","IcnPhone","IcnAddress","EmployeeCardList","color","HomepageScreen","inline","InputGroup","FormControl","Append","Search","AppRouter","path","exact","component","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.c42a4803.chunk.js","sourcesContent":["import store from 'store';\n\nexport default () => !!store.get('loggedIn');","import React, { PureComponent } from 'react';\nimport store from 'store';\nimport styled from \"styled-components/macro\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport isLoggedIn from './is_logged_in';\n\nclass LoginForm extends PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            error: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const { username, password } = this.state;\n        const { history } = this.props;\n\n        this.setState({ error: false });\n\n        if (!(username === 'user@a.com' && password === 'a')) {\n            this.setState({ error: true })\n        }\n\n        history.push('/home');\n        store.set('loggedIn', true);\n    }\n\n    handleChange(input, value) {\n        this.setState({\n            [input]: value\n        })\n    }\n\n    render() {\n\n        /* const { error } = this.state; */\n\n        if (isLoggedIn()) {\n            return <Redirect to='/home' />\n        }\n\n        return (\n            <Wrapper>\n                <Form onSubmit={this.onSubmit}>\n                    <fieldset>\n                        <Form.Group controlId=\"userEmail\">\n                            <Form.Label>\n                                Email\n                                <span className='input-required'> *</span>\n                            </Form.Label>\n                            <Form.Control type=\"email\"\n                                placeholder=\"email@user.com\"\n                                name='username'\n                                onChange={this.handleChange}\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"userPassword\">\n                            <Form.Label>\n                                Mot de passe\n                                <span className='input-required'> *</span>\n                            </Form.Label>\n                            <Form.Control type=\"password\"\n                                placeholder=\"Mot de passe\"\n                                name='password'\n                                onChange={this.handleChange}\n                                required />\n                        </Form.Group>\n                        {this.state.error && <Form.Control.Feedback>\n                            Votre adresse et mot de passe sont incorrects.\n                        </Form.Control.Feedback>}\n                    </fieldset>\n                    <Button variant=\"primary\" type=\"submit\" block>\n                        Connexion\n                    </Button>\n                </Form>\n            </Wrapper >\n        )\n    }\n}\n\nexport default LoginForm;\nconst Wrapper = styled.div``","import React, { PureComponent } from 'react';\nimport styled from \"styled-components/macro\";\nimport { Row, Col } from \"react-bootstrap\";\nimport LoginForm from '../components/login-form';\nimport Logo from '../assets/logo-random.svg';\n\n\nclass LoginScreen extends PureComponent {\n\n    render() {\n        return (\n            <Wrapper>\n                <div className='auth-wrapper'>\n                    <div className='auth-inner'>\n                        <Row noGutters>\n                            <Col sm={6}>\n                                <div className='content-left'>\n                                    <img src={Logo} alt=\"logo\" className=\"img-fluid\" />\n                                </div>\n                            </Col>\n                            <Col sm={6}>\n                                <div className='content-right'>\n                                    <h1>Connexion</h1>\n                                    <LoginForm />\n                                    <div className='form-link-wrapper'>\n                                        <a href='/' className='primary-link'>Mot de passe oublié?</a>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Wrapper>\n\n        )\n    }\n}\n\nexport default LoginScreen;\nconst Wrapper = styled.div`\nbackground-color: #19172e;\nheight:100vh;\n\n.auth-wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n    padding-right: 15px;\n    padding-left:15px;\n}\n\n.auth-inner {\n    width: 100%;\n    max-width: 760px;\n    margin: 0 auto;\n    border-radius: 7.5px;\n    overflow: hidden;\n}\n\n.content-left {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    text-align: center;\n    background-color: #272447;\n    img {\n        height:200px;\n    }\n}\n\n.content-right {\n    padding: 50px;\n    background: #ffffff;\n\n    form {\n        margin-bottom: 15px;\n    }\n\n    .form-link-wrapper {\n        text-align: center;\n    }\n}\n@media (max-width : 991.98px){\n    .content-left img {\n        height: 150px;\n    }\n}\n\n@media (max-width: 575.98px) {\n    .auth-wrapper {\n        padding-top: 30px;\n        align-items: flex-start;\n    }\n\n\n    .content-right h1 {\n        text-align: center;\n    }\n    .content-left {\n        padding: 15px;\n        img {\n            height: auto;\n            max-width: 100%\n        }\n    }   \n}\n\n`","import React, { PureComponent } from 'react';\nimport styled from \"styled-components/macro\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\n\nclass AddEmployeeForm extends PureComponent {\n    render() {\n        return (\n            <Wrapper>\n                <Form>\n                    <fieldset>\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group controlId=\"newName\">\n                                    <Form.Label>\n                                        Prénom & Nom\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"Prénom Nom\"\n                                        name='newName'\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"newEmail\">\n                                    <Form.Label>\n                                        Email\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"email\"\n                                        placeholder=\"email@user.com\"\n                                        name='newEmail'\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group controlId=\"newFunction\">\n                                    <Form.Label>\n                                        Poste Occupé\n                                <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"Poste\"\n                                        name='newFunction'\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"newPhone\">\n                                    <Form.Label>\n                                        Numéro de téléphone\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"tel\"\n                                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                                        placeholder=\"514-555-5555\"\n                                        name='newPhone'\n                                        required />\n                                </Form.Group>\n                            </Col>\n                            <Col xs={12} >\n                                <Form.Group controlId=\"newAddress\">\n                                    <Form.Label>\n                                        Adresse\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"Adresse\"\n                                        name='newAddress'\n                                        required />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Control.Feedback>\n                            Votre adresse et mot de passe sont incorrects.\n                        </Form.Control.Feedback>\n                    </fieldset>\n                    <div className='form-btn-container'>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Ajouter\n                        </Button>\n                    </div>\n                </Form>\n            </Wrapper>\n\n        )\n    }\n}\n\nexport default AddEmployeeForm;\nconst Wrapper = styled.div`\n.form-btn-container {\n    text-align: right;\n}\n\n`","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport AddEmployeeForm from \"./addEmployeeForm\";\nimport add from \"../assets/icn-plus.svg\";\n\nfunction EmployeeModal(props) {\n\n    return (\n        <div>\n            <Modal\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <ModalWrapper>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Ajouter un nouveau contact à l'annuaire\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <AddEmployeeForm />\n                    </Modal.Body>\n                </ModalWrapper>\n            </Modal>\n        </div>\n    );\n}\n\nfunction AddEmployeeModal() {\n    const [modalShow, setModalShow] = React.useState(false);\n    return (\n        <Wrapper>\n            <Button variant='icon' className=\"nav-link\" onClick={() => setModalShow(true)}>\n                <img src={add} alt=\"add\" className=\"img-fluid\" />\n            </Button>\n\n            <EmployeeModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n            />\n        </Wrapper>\n    );\n}\n\nexport default AddEmployeeModal;\n\nconst Wrapper = styled.div`\n`\nconst ModalWrapper = styled.div`\n.modal-header {\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    background: #272447;\n    color: #ffffff;\n    .h4 {\n        margin-bottom: 0;\n    }\n    .close {\n        position: absolute;\n        right: 0;\n        margin: 0;\n        color: #ffffff;\n        text-shadow: none;\n        opacity: 1;\n    }\n}\n.modal-body {\n    padding: 50px;\n}\n\n`\n\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport store from 'store';\nimport isLoggedIn from './is_logged_in';\nimport styled from \"styled-components/macro\";\nimport logo from \"../assets/logo-random.svg\";\nimport logout from \"../assets/icn-logout.svg\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport AddEmployeeModal from \"./addEmployeeModal\";\n\n\nconst handleLogout = history => () => {\n  store.remove('loggedIn');\n  history.push('/');\n}\n\nconst Navigation = ({ history }) => {\n  if (!isLoggedIn()) {\n    return <Redirect to='/' />\n  }\n  return (\n    <Wrapper>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img src={logo} alt=\"logo\" className=\"img-fluid\" />\n        </Navbar.Brand>\n        <Nav>\n          <AddEmployeeModal />\n          <Nav.Link onClick={handleLogout(history)}>\n            <img src={logout} alt=\"logout\" className=\"img-fluid\" />\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    </Wrapper>\n  );\n}\n\nexport default Navigation;\nconst Wrapper = styled.div`\n\n.navbar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0;\n\n  .navbar-brand {\n      margin-bottom: 50px;\n      margin-right: 0;\n  }\n\n  .navbar-nav {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      padding: 0;\n      border-bottom: 0.5px solid rgba(255,255,255,0.5);\n  }\n\n  .nav-link {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 80px;\n      transition: all .2s ease;\n\n      &:hover {\n          background: #19172e;\n      }\n  }\n}\n`\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components/macro'\nimport Navigation from \"../components/Navigation\";\n\n\nclass BaseScreen extends PureComponent {\n    render() {\n        return (\n            <Wrapper>\n                <div className=\"navigation-wrapper\">\n                    <Navigation />\n                </div>\n\n                <div className='page-content'>\n                    {this.props.children}\n                </div>\n            </Wrapper>\n        )\n    }\n}\n\nexport default BaseScreen;\n\nconst Wrapper = styled.div`\nposition: relative;\ndisplay: flex;\n\n.navigation-wrapper {\n    position: fixed;\n    height: 100%;\n    background: #272447;\n    width: 100%;\n    max-width: 100px;\n  }\n\n`","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport IcnEmail from '../assets/icn-email.svg';\nimport IcnPhone from '../assets/icn-phone.svg';\nimport IcnAddress from '../assets/icn-home.svg';\n\nclass EmployeeCardSingle extends PureComponent {\n  render() {\n    const { name, title, email, telephone, address } = this.props;\n\n    return (\n      <Wrapper className=\"col\">\n        <Card className='employee-card-single'>\n          <div className='employee-card-single-img'></div>\n          <Card.Body>\n            <div className='employee-info'>\n              <Card.Title>{name}</Card.Title>\n              <Card.Subtitle>\n                {title}\n              </Card.Subtitle>\n            </div>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <img src={IcnEmail} alt=\"search\" className=\"img-fluid\" />\n                <a href={`mailto:${this.props.email}`}>{email}</a>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <img src={IcnPhone} alt=\"search\" className=\"img-fluid\" />\n                <a href={`tel:+${this.props.telephone}`}>{telephone}</a>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <img src={IcnAddress} alt=\"search\" className=\"img-fluid\" />\n                {address}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </Wrapper>\n    );\n  }\n}\n\nexport default EmployeeCardSingle;\n\nconst Wrapper = styled.div`\n  margin-bottom: 30px;\n\n.employee-card-single {\n  height: 100%;\n  border-radius: 7.5px;\n  border: none;\n  box-shadow: 4px 4px 8px rgba(0,0,0,0.15);\n  overflow: hidden;\n  .card-body {\n      padding: 0;\n  }\n}\n\n.employee-info {\n  padding: .75rem 1.25rem;\n  .h5 {\n    margin-bottom: 10px;\n  }\n\n  .h6 {\n    margin-bottom: 0;\n  }\n\n  .card-subtitle {\n    color: #9a9a9a;\n    text-transform: uppercase;\n    font-size: 12px;\n  }\n}\n\n.list-group-item {\n  display: flex;\n  align-items: center;\n  border: none;\n  border-top: 1px solid rgba(0,0,0,.125);\n\n  &:first-child {\n    border-top: 1px solid rgba(0,0,0,.125);\n  }\n\n  img {\n    margin-right: 8px;\n  }\n}\n\n.employee-card-single-img {\n    display: block;\n    height: 150px;\n    width: 100%;\n    background-color: #CC262D;\n\n}\n\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport EmployeeCardSingle from \"../components/EmployeeCardSingle\";\n\nclass EmployeeCardList extends PureComponent {\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-3  row-cols-xl-5\">\n          <EmployeeCardSingle\n            color='#eeeeee'\n            name=\"Shany Carl\"\n            title=\"Enseignant en Informatique\"\n            email=\"shany@random.com\"\n            telephone=\"418-666-6666\"\n            address=\"1234, rue Thiers\"\n          />\n          <EmployeeCardSingle\n            color='#cccccc'\n            name=\"Francisca Vargas\"\n            title=\"Developpeur Front-End\"\n            email=\"francisca@random.com\"\n            telephone=\"+514-555-5555\"\n            address=\"1234, rue St-Denis\"\n          />\n          <EmployeeCardSingle\n            color='#9a9a9a'\n            name=\"Julien Laplanche\"\n            title=\"Developpeur Back-End\"\n            email=\"julien@random.com\"\n            telephone=\"+514-444-4444\"\n            address=\"1234, rue St-Catherine\"\n          />\n          <EmployeeCardSingle\n            color='#9a9a9a'\n            name=\"Jane Doe\"\n            title=\"Developpeur Front-End\"\n            email=\"jane@random.com\"\n            telephone=\"+514-333-3333\"\n            address=\"1234, rue Papineau\"\n          />\n          <EmployeeCardSingle\n            color='#9a9a9a'\n            name=\"Bob Doe\"\n            title=\"Developpeur Full-Stack\"\n            email=\"bob@random.com\"\n            telephone=\"+514-222-2222\"\n            address=\"1234, rue Laurier\"\n          />\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default EmployeeCardList;\n\nconst Wrapper = styled.div`\n.row {\n  align-items: stretch;\n}\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport BaseScreen from \"./BaseScreen\";\nimport EmployeeCardList from \"../components/EmployeeCardList\";\nimport { Form, FormControl, InputGroup, Button, } from \"react-bootstrap\";\nimport Search from \"../assets/icn-search.svg\";\nimport AddEmployeeModal from \"../components/addEmployeeModal\";\n\nclass HomepageScreen extends PureComponent {\n  render() {\n    return (\n      <BaseScreen>\n        <Wrapper className='directory'>\n          <div className='directory-header'>\n            <h1>Annuaire Employés</h1>\n            <Form inline>\n              <InputGroup className=\"mb-0 input-search\">\n                <FormControl type=\"text\" placeholder=\"Rechercher\" className=\"\" />\n                <InputGroup.Append>\n                  <Button variant=\"primary\" type='submit'>\n                    <img src={Search} alt=\"search\" className=\"img-fluid\" />\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form>\n          </div>\n          <EmployeeCardList />\n          <AddEmployeeModal />\n        </Wrapper>\n      </BaseScreen>\n    );\n  }\n}\n\nexport default HomepageScreen;\nconst Wrapper = styled.div`\nmargin: 0 auto;\npadding-right: 15px;\npadding-left: 15px;\n\n.directory-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n  //padding-bottom: 30px;\n  //border-bottom: 1px solid #CC262D;\n\n  h1 {\n    margin-bottom: 0;\n  }\n}\n\n`\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from './screens/LoginScreen';\nimport HomepageScreen from './screens/HomepageScreen';\n\n\nconst AppRouter = (props) => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={LoginScreen} />\n                <Route path=\"/home\" exact component={HomepageScreen} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, {Component} from 'react';\nimport AppRouter from \"./Router\"\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <AppRouter/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-random.2b74f4c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-logout.6ed5768b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-plus.0f7ddb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-email.80573950.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-phone.cd9f3e79.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-home.adb80bec.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-search.f44287b3.svg\";"],"sourceRoot":""}