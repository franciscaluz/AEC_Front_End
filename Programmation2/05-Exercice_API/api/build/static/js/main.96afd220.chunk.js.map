{"version":3,"sources":["components/is_logged_in.js","components/login-form.js","screens/LoginScreen.js","components/addEmployeeForm.js","components/addEmployeeModal.js","components/Navigation.js","screens/BaseScreen.js","components/EmployeeCardSingle.js","components/EmployeeCardList.js","screens/HomepageScreen.js","Router.js","App.js","serviceWorker.js","index.js","assets/logo-random.svg","assets/icn-logout.svg","assets/icn-plus.svg","assets/icn-email.svg","assets/icn-phone.svg","assets/icn-home.svg","assets/icn-search.svg"],"names":["store","get","LoginForm","props","handleConnexion","bind","history","this","email","document","getElementById","value","password","toLowerCase","set","push","isLoggedIn","to","Wrapper","Form","Group","controlId","Label","className","Control","type","placeholder","required","Feedback","Button","variant","block","onClick","PureComponent","withRouter","styled","div","LoginScreen","Row","noGutters","Col","sm","src","Logo","alt","href","AddEmployeeForm","name","pattern","xs","EmployeeModal","Modal","size","aria-labelledby","centered","ModalWrapper","Header","closeButton","Title","id","Body","AddEmployeeModal","React","useState","modalShow","setModalShow","add","show","onHide","handleLogout","remove","Navbar","expand","Brand","logo","Nav","Link","logout","BaseScreen","children","EmployeeCardSingle","title","telephone","address","Card","Subtitle","ListGroup","Item","IcnEmail","IcnPhone","IcnAddress","EmployeeCardList","color","HomepageScreen","inline","InputGroup","FormControl","Append","Search","AppRouter","path","exact","component","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.96afd220.chunk.js","sourcesContent":["import store from 'store';\n\nexport default () => !!store.get('loggedIn');","import React, { PureComponent } from 'react';\nimport store from 'store';\nimport styled from \"styled-components/macro\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Redirect, withRouter } from 'react-router-dom';\nimport isLoggedIn from './is_logged_in';\n\nclass LoginForm extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.handleConnexion = this.handleConnexion.bind(this);\n    }\n    handleConnexion() {\n        let connecter = false;\n        const { history } = this.props;\n\n        const email = document.getElementById('userEmail').value;\n        const password = document.getElementById('userPassword').value;\n\n        if (email.toLowerCase() === \"user@a.com\" && password === \"a\") {\n            connecter = true;\n\n            store.set('loggedIn', true);\n            history.push('/home');\n        }\n    }\n\n    render() {\n\n        if (isLoggedIn()) {\n            return <Redirect to='/home' />\n        }\n\n        return (\n            <Wrapper>\n                <Form>\n                    <fieldset>\n                        <Form.Group controlId=\"userEmail\">\n                            <Form.Label>\n                                Email\n                                <span className='input-required'> *</span>\n                            </Form.Label>\n                            <Form.Control type=\"email\"\n                                placeholder=\"email@user.com\"\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"userPassword\">\n                            <Form.Label>\n                                Mot de passe\n                                <span className='input-required'> *</span>\n                            </Form.Label>\n                            <Form.Control type=\"password\"\n                                placeholder=\"Mot de passe\"\n                                required />\n                        </Form.Group>\n                        <Form.Control.Feedback>\n                            Votre adresse et mot de passe sont incorrects.\n                        </Form.Control.Feedback>\n                    </fieldset>\n                    <Button variant=\"primary\" type=\"submit\" block onClick={this.handleConnexion}>\n                        Connexion\n                    </Button>\n                </Form>\n            </Wrapper >\n        )\n    }\n}\n\nexport default withRouter(LoginForm);\nconst Wrapper = styled.div``","import React, { PureComponent } from 'react';\nimport styled from \"styled-components/macro\";\nimport { Row, Col } from \"react-bootstrap\";\nimport LoginForm from '../components/login-form';\nimport Logo from '../assets/logo-random.svg';\n\n\nclass LoginScreen extends PureComponent {\n\n    render() {\n        return (\n            <Wrapper>\n                <div className='auth-wrapper'>\n                    <div className='auth-inner'>\n                        <Row noGutters>\n                            <Col sm={6}>\n                                <div className='content-left'>\n                                    <img src={Logo} alt=\"logo\" className=\"img-fluid\" />\n                                </div>\n                            </Col>\n                            <Col sm={6}>\n                                <div className='content-right'>\n                                    <h1>Connexion</h1>\n                                    <LoginForm />\n                                    <div className='form-link-wrapper'>\n                                        <a href='/' className='primary-link'>Mot de passe oublié?</a>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Wrapper>\n\n        )\n    }\n}\n\nexport default LoginScreen;\nconst Wrapper = styled.div`\nbackground-color: #19172e;\nheight:100vh;\n\n.auth-wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    margin: 0 auto;\n    padding-right: 15px;\n    padding-left:15px;\n}\n\n.auth-inner {\n    width: 100%;\n    max-width: 760px;\n    margin: 0 auto;\n    border-radius: 7.5px;\n    overflow: hidden;\n}\n\n.content-left {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    text-align: center;\n    background-color: #272447;\n    img {\n        height:200px;\n    }\n}\n\n.content-right {\n    padding: 50px;\n    background: #ffffff;\n\n    form {\n        margin-bottom: 15px;\n    }\n\n    .form-link-wrapper {\n        text-align: center;\n    }\n}\n@media (max-width : 991.98px){\n    .content-left img {\n        height: 150px;\n    }\n}\n\n@media (max-width: 575.98px) {\n    .auth-wrapper {\n        padding-top: 30px;\n        align-items: flex-start;\n    }\n\n\n    .content-right h1 {\n        text-align: center;\n    }\n    .content-left {\n        padding: 15px;\n        img {\n            height: auto;\n            max-width: 100%\n        }\n    }   \n}\n\n`","import React, { PureComponent } from 'react';\nimport styled from \"styled-components/macro\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\n\nclass AddEmployeeForm extends PureComponent {\n\n\n    render() {\n        return (\n            <Wrapper>\n                <Form>\n                    <fieldset>\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group controlId=\"newName\">\n                                    <Form.Label>\n                                        Prénom & Nom\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"Prénom Nom\"\n                                        name='name'\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"newEmail\">\n                                    <Form.Label>\n                                        Email\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"email\"\n                                        placeholder=\"email@user.com\"\n                                        name='email'\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group controlId=\"newOccupation\">\n                                    <Form.Label>\n                                        Poste Occupé\n                                <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"Poste\"\n                                        name='occupation'\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"newPhone\">\n                                    <Form.Label>\n                                        Numéro de téléphone\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"tel\"\n                                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                                        placeholder=\"514-555-5555\"\n                                        name='phone'\n                                        required />\n                                </Form.Group>\n                            </Col>\n                            <Col xs={12} >\n                                <Form.Group controlId=\"newAddress\">\n                                    <Form.Label>\n                                        Adresse\n                                        <span className='input-required'> *</span>\n                                    </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"Adresse\"\n                                        name='address'\n                                        required />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Control.Feedback>\n                            Ce champ est invalide.\n                        </Form.Control.Feedback>\n                    </fieldset>\n                    <div className='form-btn-container'>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Ajouter\n                        </Button>\n                    </div>\n                </Form>\n            </Wrapper>\n\n        )\n    }\n}\n\nexport default AddEmployeeForm;\nconst Wrapper = styled.div`\n.form-btn-container {\n    text-align: right;\n}\n\n`","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport AddEmployeeForm from \"./addEmployeeForm\";\nimport add from \"../assets/icn-plus.svg\";\n\nfunction EmployeeModal(props) {\n\n    return (\n        <div>\n            <Modal\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <ModalWrapper>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Ajouter un nouveau contact à l'annuaire\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <AddEmployeeForm />\n                    </Modal.Body>\n                </ModalWrapper>\n            </Modal>\n        </div>\n    );\n}\n\nfunction AddEmployeeModal() {\n    const [modalShow, setModalShow] = React.useState(false);\n    return (\n        <Wrapper>\n            <Button variant='icon' className=\"nav-link\" onClick={() => setModalShow(true)}>\n                <img src={add} alt=\"add\" className=\"img-fluid\" />\n            </Button>\n\n            <EmployeeModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n            />\n        </Wrapper>\n    );\n}\n\nexport default AddEmployeeModal;\n\nconst Wrapper = styled.div`\n`\nconst ModalWrapper = styled.div`\n.modal-header {\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    background: #272447;\n    color: #ffffff;\n    .h4 {\n        margin-bottom: 0;\n    }\n    .close {\n        position: absolute;\n        right: 0;\n        margin: 0;\n        color: #ffffff;\n        text-shadow: none;\n        opacity: 1;\n    }\n}\n.modal-body {\n    padding: 50px;\n}\n\n`\n\n","import React from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport store from 'store';\nimport isLoggedIn from './is_logged_in';\nimport styled from \"styled-components/macro\";\nimport logo from \"../assets/logo-random.svg\";\nimport logout from \"../assets/icn-logout.svg\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport AddEmployeeModal from \"./addEmployeeModal\";\n\n\nconst handleLogout = history => () => {\n  store.remove('loggedIn');\n  history.push('/');\n}\n\nconst Navigation = ({ history }) => {\n  if (!isLoggedIn()) {\n    return <Redirect to='/' />\n  }\n  return (\n    <Wrapper>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img src={logo} alt=\"logo\" className=\"img-fluid\" />\n        </Navbar.Brand>\n        <Nav>\n          <AddEmployeeModal />\n          <Nav.Link onClick={handleLogout(history)}>\n            <img src={logout} alt=\"logout\" className=\"img-fluid\" />\n          </Nav.Link>\n        </Nav>\n      </Navbar>\n    </Wrapper>\n  );\n}\n\nexport default withRouter(Navigation);\nconst Wrapper = styled.div`\n\n.navbar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0;\n\n  .navbar-brand {\n      margin-bottom: 50px;\n      margin-right: 0;\n  }\n\n  .navbar-nav {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      padding: 0;\n      border-bottom: 0.5px solid rgba(255,255,255,0.5);\n  }\n\n  .nav-link {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 80px;\n      transition: all .2s ease;\n\n      &:hover {\n          background: #19172e;\n      }\n  }\n}\n`\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components/macro'\nimport Navigation from \"../components/Navigation\";\n\n\nclass BaseScreen extends PureComponent {\n    render() {\n        return (\n            <Wrapper>\n                <div className=\"navigation-wrapper\">\n                    <Navigation />\n                </div>\n\n                <div className='page-content'>\n                    {this.props.children}\n                </div>\n            </Wrapper>\n        )\n    }\n}\n\nexport default BaseScreen;\n\nconst Wrapper = styled.div`\nposition: relative;\ndisplay: flex;\n\n.navigation-wrapper {\n    position: fixed;\n    height: 100%;\n    background: #272447;\n    width: 100%;\n    max-width: 100px;\n  }\n\n`","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport IcnEmail from '../assets/icn-email.svg';\nimport IcnPhone from '../assets/icn-phone.svg';\nimport IcnAddress from '../assets/icn-home.svg';\n\nclass EmployeeCardSingle extends PureComponent {\n  render() {\n    const { name, title, email, telephone, address } = this.props;\n\n    return (\n      <Wrapper className=\"col\">\n        <Card className='employee-card-single'>\n          <div className='employee-card-single-img'></div>\n          <Card.Body>\n            <div className='employee-info'>\n              <Card.Title>{name}</Card.Title>\n              <Card.Subtitle>\n                {title}\n              </Card.Subtitle>\n            </div>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <img src={IcnEmail} alt=\"search\" className=\"img-fluid\" />\n                <a href={`mailto:${this.props.email}`}>{email}</a>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <img src={IcnPhone} alt=\"search\" className=\"img-fluid\" />\n                <a href={`tel:+${this.props.telephone}`}>{telephone}</a>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <img src={IcnAddress} alt=\"search\" className=\"img-fluid\" />\n                {address}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n      </Wrapper>\n    );\n  }\n}\n\nexport default EmployeeCardSingle;\n\nconst Wrapper = styled.div`\n  margin-bottom: 30px;\n\n.employee-card-single {\n  height: 100%;\n  border-radius: 7.5px;\n  border: none;\n  box-shadow: 4px 4px 8px rgba(0,0,0,0.15);\n  overflow: hidden;\n  .card-body {\n      padding: 0;\n  }\n}\n\n.employee-info {\n  padding: .75rem 1.25rem;\n  .h5 {\n    margin-bottom: 10px;\n  }\n\n  .h6 {\n    margin-bottom: 0;\n  }\n\n  .card-subtitle {\n    color: #9a9a9a;\n    text-transform: uppercase;\n    font-size: 12px;\n  }\n}\n\n.list-group-item {\n  display: flex;\n  align-items: center;\n  border: none;\n  border-top: 1px solid rgba(0,0,0,.125);\n\n  &:first-child {\n    border-top: 1px solid rgba(0,0,0,.125);\n  }\n\n  img {\n    margin-right: 8px;\n  }\n}\n\n.employee-card-single-img {\n    display: block;\n    height: 150px;\n    width: 100%;\n    background: #cccccc;\n}\n\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport EmployeeCardSingle from \"../components/EmployeeCardSingle\";\n\nclass EmployeeCardList extends PureComponent {\n  render() {\n    return (\n      <Wrapper className=\"row row-cols-1 row-cols-sm-2 row-cols-md-2 row-cols-lg-3  row-cols-xl-5\">\n        <EmployeeCardSingle\n          color='#eeeeee'\n          name=\"Shany Carl\"\n          title=\"Enseignant en Informatique\"\n          email=\"shany@random.com\"\n          telephone=\"418-666-6666\"\n          address=\"1234, rue Thiers\"\n        />\n        <EmployeeCardSingle\n          color='#cccccc'\n          name=\"Francisca Vargas\"\n          title=\"Developpeur Front-End\"\n          email=\"francisca@random.com\"\n          telephone=\"+514-555-5555\"\n          address=\"1234, rue St-Denis\"\n        />\n        <EmployeeCardSingle\n          color='#9a9a9a'\n          name=\"Julien Laplanche\"\n          title=\"Developpeur Back-End\"\n          email=\"julien@random.com\"\n          telephone=\"+514-444-4444\"\n          address=\"1234, rue St-Catherine\"\n        />\n        <EmployeeCardSingle\n          color='#9a9a9a'\n          name=\"Jane Doe\"\n          title=\"Developpeur Front-End\"\n          email=\"jane@random.com\"\n          telephone=\"+514-333-3333\"\n          address=\"1234, rue Papineau\"\n        />\n        <EmployeeCardSingle\n          color='#9a9a9a'\n          name=\"Bob Doe\"\n          title=\"Developpeur Full-Stack\"\n          email=\"bob@random.com\"\n          telephone=\"+514-222-2222\"\n          address=\"1234, rue Laurier\"\n        />\n        <EmployeeCardSingle\n          color='#9a9a9a'\n          name=\"Jody Doe\"\n          title=\"Chargé de projet\"\n          email=\"jody@random.com\"\n          telephone=\"+514-111-1111\"\n          address=\"1234, rue Chabot\"\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default EmployeeCardList;\n\nconst Wrapper = styled.div`\n  align-items: stretch;\n`\n","import React, { PureComponent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport BaseScreen from \"./BaseScreen\";\nimport EmployeeCardList from \"../components/EmployeeCardList\";\nimport { Form, FormControl, InputGroup, Button, } from \"react-bootstrap\";\nimport Search from \"../assets/icn-search.svg\";\nimport AddEmployeeModal from \"../components/addEmployeeModal\";\n\nclass HomepageScreen extends PureComponent {\n  render() {\n    return (\n      <BaseScreen>\n        <Wrapper className='directory'>\n          <div className='directory-header'>\n            <h1>Annuaire Employés</h1>\n            <Form inline>\n              <InputGroup className=\"mb-0 input-search\">\n                <FormControl type=\"text\" placeholder=\"Rechercher\" className=\"\" />\n                <InputGroup.Append>\n                  <Button variant=\"primary\" type='submit'>\n                    <img src={Search} alt=\"search\" className=\"img-fluid\" />\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form>\n          </div>\n          <EmployeeCardList />\n          <AddEmployeeModal />\n        </Wrapper>\n      </BaseScreen>\n    );\n  }\n}\n\nexport default HomepageScreen;\nconst Wrapper = styled.div`\nmargin: 0 auto;\npadding-right: 15px;\npadding-left: 15px;\n\n.directory-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n  //padding-bottom: 30px;\n  //border-bottom: 1px solid #CC262D;\n\n  h1 {\n    margin-bottom: 0;\n  }\n}\n\n`\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from './screens/LoginScreen';\nimport HomepageScreen from './screens/HomepageScreen';\n\n\nconst AppRouter = (props) => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={LoginScreen} />\n                <Route path=\"/home\" exact component={HomepageScreen} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import React, {Component} from 'react';\nimport AppRouter from \"./Router\"\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <AppRouter/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-random.2b74f4c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-logout.6ed5768b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-plus.0f7ddb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-email.80573950.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-phone.cd9f3e79.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-home.adb80bec.svg\";","module.exports = __webpack_public_path__ + \"static/media/icn-search.f44287b3.svg\";"],"sourceRoot":""}